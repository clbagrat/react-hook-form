{"id":"src/Form/ErrorMessages.js","dependencies":[{"name":"/Users/bobmolodykh/dev/react-hook-form/package.json","includedInParent":true,"mtime":1563449903329},{"name":"react","loc":{"line":1,"column":32},"parent":"/Users/bobmolodykh/dev/react-hook-form/src/Form/ErrorMessages.js","resolved":"/Users/bobmolodykh/dev/react-hook-form/node_modules/react/index.js"},{"name":"@monorepo/hooks/Helpers/fp","loc":{"line":2,"column":21},"parent":"/Users/bobmolodykh/dev/react-hook-form/src/Form/ErrorMessages.js","resolved":"/Users/bobmolodykh/dev/react-hook-form/node_modules/@monorepo/hooks/Helpers/fp.js"}],"generated":{"js":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.ErrorMessages = void 0;\n\nvar _react = _interopRequireWildcard(require(\"react\"));\n\nvar _fp = require(\"@monorepo/hooks/Helpers/fp\");\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = Object.defineProperty && Object.getOwnPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : {}; if (desc.get || desc.set) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } } newObj.default = obj; return newObj; } }\n\nvar ErrorMessages = function ErrorMessages(_ref) {\n  var status = _ref.status,\n      _ref$messages = _ref.messages,\n      messages = _ref$messages === void 0 ? [] : _ref$messages,\n      showConditions = _ref.showConditions;\n  return (0, _fp.some)(function (state) {\n    return status[state];\n  })(showConditions) && _react.default.createElement(_react.Fragment, null, messages.map(function (message, i) {\n    return _react.default.createElement(\"div\", {\n      key: message + i\n    }, message);\n  }));\n};\n\nexports.ErrorMessages = ErrorMessages;"},"sourceMaps":{"js":{"mappings":[{"generated":{"line":8,"column":0},"source":"src/Form/ErrorMessages.js","original":{"line":1,"column":0}},{"generated":{"line":10,"column":0},"source":"src/Form/ErrorMessages.js","original":{"line":2,"column":0}},{"generated":{"line":14,"column":0},"source":"src/Form/ErrorMessages.js","original":{"line":4,"column":7}},{"name":"ErrorMessages","generated":{"line":14,"column":4},"source":"src/Form/ErrorMessages.js","original":{"line":4,"column":13}},{"generated":{"line":14,"column":17},"source":"src/Form/ErrorMessages.js","original":{"line":4,"column":26}},{"generated":{"line":14,"column":20},"source":"src/Form/ErrorMessages.js","original":{"line":4,"column":29}},{"name":"ErrorMessages","generated":{"line":14,"column":29},"source":"src/Form/ErrorMessages.js","original":{"line":4,"column":13}},{"generated":{"line":14,"column":42},"source":"src/Form/ErrorMessages.js","original":{"line":4,"column":29}},{"generated":{"line":15,"column":0},"source":"src/Form/ErrorMessages.js","original":{"line":4,"column":29}},{"name":"status","generated":{"line":15,"column":6},"source":"src/Form/ErrorMessages.js","original":{"line":4,"column":32}},{"generated":{"line":15,"column":12},"source":"src/Form/ErrorMessages.js","original":{"line":4,"column":29}},{"name":"status","generated":{"line":15,"column":20},"source":"src/Form/ErrorMessages.js","original":{"line":4,"column":32}},{"generated":{"line":15,"column":26},"source":"src/Form/ErrorMessages.js","original":{"line":4,"column":29}},{"generated":{"line":16,"column":0},"source":"src/Form/ErrorMessages.js","original":{"line":4,"column":29}},{"name":"messages","generated":{"line":16,"column":27},"source":"src/Form/ErrorMessages.js","original":{"line":4,"column":40}},{"generated":{"line":16,"column":35},"source":"src/Form/ErrorMessages.js","original":{"line":4,"column":29}},{"generated":{"line":17,"column":0},"source":"src/Form/ErrorMessages.js","original":{"line":4,"column":29}},{"name":"messages","generated":{"line":17,"column":6},"source":"src/Form/ErrorMessages.js","original":{"line":4,"column":40}},{"generated":{"line":17,"column":14},"source":"src/Form/ErrorMessages.js","original":{"line":4,"column":29}},{"generated":{"line":17,"column":44},"source":"src/Form/ErrorMessages.js","original":{"line":4,"column":51}},{"generated":{"line":17,"column":46},"source":"src/Form/ErrorMessages.js","original":{"line":4,"column":29}},{"generated":{"line":18,"column":0},"source":"src/Form/ErrorMessages.js","original":{"line":4,"column":29}},{"name":"showConditions","generated":{"line":18,"column":6},"source":"src/Form/ErrorMessages.js","original":{"line":4,"column":55}},{"generated":{"line":18,"column":20},"source":"src/Form/ErrorMessages.js","original":{"line":4,"column":29}},{"name":"showConditions","generated":{"line":18,"column":28},"source":"src/Form/ErrorMessages.js","original":{"line":4,"column":55}},{"generated":{"line":18,"column":42},"source":"src/Form/ErrorMessages.js","original":{"line":4,"column":29}},{"generated":{"line":19,"column":0},"source":"src/Form/ErrorMessages.js","original":{"line":4,"column":29}},{"generated":{"line":19,"column":9},"source":"src/Form/ErrorMessages.js","original":{"line":5,"column":2}},{"generated":{"line":19,"column":23},"source":"src/Form/ErrorMessages.js","original":{"line":5,"column":7}},{"name":"state","generated":{"line":19,"column":33},"source":"src/Form/ErrorMessages.js","original":{"line":5,"column":7}},{"generated":{"line":19,"column":38},"source":"src/Form/ErrorMessages.js","original":{"line":5,"column":12}},{"generated":{"line":20,"column":0},"source":"src/Form/ErrorMessages.js","original":{"line":5,"column":12}},{"name":"status","generated":{"line":20,"column":11},"source":"src/Form/ErrorMessages.js","original":{"line":5,"column":16}},{"generated":{"line":20,"column":17},"source":"src/Form/ErrorMessages.js","original":{"line":5,"column":22}},{"name":"state","generated":{"line":20,"column":18},"source":"src/Form/ErrorMessages.js","original":{"line":5,"column":23}},{"generated":{"line":20,"column":23},"source":"src/Form/ErrorMessages.js","original":{"line":5,"column":22}},{"generated":{"line":20,"column":24},"source":"src/Form/ErrorMessages.js","original":{"line":5,"column":12}},{"generated":{"line":21,"column":0},"source":"src/Form/ErrorMessages.js","original":{"line":5,"column":12}},{"generated":{"line":21,"column":3},"source":"src/Form/ErrorMessages.js","original":{"line":5,"column":2}},{"name":"showConditions","generated":{"line":21,"column":5},"source":"src/Form/ErrorMessages.js","original":{"line":5,"column":31}},{"generated":{"line":21,"column":19},"source":"src/Form/ErrorMessages.js","original":{"line":5,"column":2}},{"generated":{"line":21,"column":24},"source":"src/Form/ErrorMessages.js","original":{"line":6,"column":4}},{"generated":{"line":21,"column":53},"source":"src/Form/ErrorMessages.js","original":{"line":6,"column":5}},{"generated":{"line":21,"column":68},"source":"src/Form/ErrorMessages.js","original":{"line":6,"column":4}},{"name":"messages","generated":{"line":21,"column":76},"source":"src/Form/ErrorMessages.js","original":{"line":7,"column":7}},{"generated":{"line":21,"column":84},"source":"src/Form/ErrorMessages.js","original":{"line":7,"column":15}},{"name":"map","generated":{"line":21,"column":85},"source":"src/Form/ErrorMessages.js","original":{"line":7,"column":16}},{"generated":{"line":21,"column":88},"source":"src/Form/ErrorMessages.js","original":{"line":7,"column":7}},{"generated":{"line":21,"column":89},"source":"src/Form/ErrorMessages.js","original":{"line":7,"column":20}},{"name":"message","generated":{"line":21,"column":99},"source":"src/Form/ErrorMessages.js","original":{"line":7,"column":21}},{"generated":{"line":21,"column":106},"source":"src/Form/ErrorMessages.js","original":{"line":7,"column":20}},{"name":"i","generated":{"line":21,"column":108},"source":"src/Form/ErrorMessages.js","original":{"line":7,"column":30}},{"generated":{"line":21,"column":109},"source":"src/Form/ErrorMessages.js","original":{"line":7,"column":20}},{"generated":{"line":22,"column":0},"source":"src/Form/ErrorMessages.js","original":{"line":7,"column":20}},{"generated":{"line":22,"column":11},"source":"src/Form/ErrorMessages.js","original":{"line":8,"column":8}},{"generated":{"line":23,"column":0},"source":"src/Form/ErrorMessages.js","original":{"line":8,"column":13}},{"generated":{"line":23,"column":6},"source":"src/Form/ErrorMessages.js","original":{"line":8,"column":13}},{"generated":{"line":23,"column":9},"source":"src/Form/ErrorMessages.js","original":{"line":8,"column":16}},{"name":"message","generated":{"line":23,"column":11},"source":"src/Form/ErrorMessages.js","original":{"line":8,"column":18}},{"generated":{"line":23,"column":18},"source":"src/Form/ErrorMessages.js","original":{"line":8,"column":25}},{"name":"i","generated":{"line":23,"column":21},"source":"src/Form/ErrorMessages.js","original":{"line":8,"column":28}},{"generated":{"line":24,"column":0},"source":"src/Form/ErrorMessages.js","original":{"line":8,"column":8}},{"name":"message","generated":{"line":24,"column":7},"source":"src/Form/ErrorMessages.js","original":{"line":8,"column":32}},{"generated":{"line":24,"column":14},"source":"src/Form/ErrorMessages.js","original":{"line":8,"column":8}},{"generated":{"line":24,"column":15},"source":"src/Form/ErrorMessages.js","original":{"line":7,"column":20}},{"generated":{"line":25,"column":0},"source":"src/Form/ErrorMessages.js","original":{"line":7,"column":20}},{"generated":{"line":25,"column":3},"source":"src/Form/ErrorMessages.js","original":{"line":7,"column":7}},{"generated":{"line":25,"column":4},"source":"src/Form/ErrorMessages.js","original":{"line":6,"column":4}},{"generated":{"line":25,"column":5},"source":"src/Form/ErrorMessages.js","original":{"line":4,"column":29}},{"generated":{"line":26,"column":0},"source":"src/Form/ErrorMessages.js","original":{"line":4,"column":29}},{"generated":{"line":26,"column":1},"source":"src/Form/ErrorMessages.js","original":{"line":4,"column":7}}],"sources":{"src/Form/ErrorMessages.js":"import React, { Fragment } from 'react';\nimport { some } from '@monorepo/hooks/Helpers/fp';\n\nexport const ErrorMessages = ({ status, messages = [], showConditions }) =>\n  some(state => status[state])(showConditions) && (\n    <Fragment>\n      {messages.map((message, i) => (\n        <div key={message + i}>{message}</div>\n      ))}\n    </Fragment>\n  );\n"},"lineCount":null}},"error":null,"hash":"0e5499dcb7f99758175343154a5ac154","cacheData":{"env":{}}}